================================================================
REPOPACK OUTPUT FILE
================================================================

This file was generated by Repopack on: 2024-12-03T15:40:53.211Z

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This header section
2. Multiple file entries, each consisting of:
   a. A separator line (================)
   b. The file path (File: path/to/file)
   c. Another separator line
   d. The full contents of the file
   e. A blank line

Usage Guidelines:
-----------------
1. This file should be treated as read-only. Any changes should be made to the
   original repository files, not this packed version.
2. When processing this file, use the separators and "File:" markers to
   distinguish between different files in the repository.
3. Be aware that this file may contain sensitive information. Handle it with
   the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation.


For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Files
================================================================

================
File: eslint.config.js
================
import js from '@eslint/js'
import globals from 'globals'
import react from 'eslint-plugin-react'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    settings: { react: { version: '18.3' } },
    plugins: {
      react,
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...react.configs.recommended.rules,
      ...react.configs['jsx-runtime'].rules,
      ...reactHooks.configs.recommended.rules,
      'react/jsx-no-target-blank': 'off',
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
]

================
File: index.html
================
<!doctype html>
<html lang="en">
  <head>
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KF37LYDE80"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KF37LYDE80');
</script>

    <meta charset="UTF-8" />
    <link rel="icon" type="image/png" href="/love.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

      <!-- Open Graph / WhatsApp -->
      <meta property="og:type" content="website" />
      <meta property="og:title" content="ಅಕ್ಷಯ & ಅನುಷ Wedding Invitation" />
      <meta property="og:description" content="Join us in celebrating our wedding on December 8, 2024" />
      <meta property="og:image" content="https://akshayaanusha.netlify.app/og-image.jpg?v=2" />
      <meta property="og:url" content="https://akshayaanusha.netlify.app" />
      
      <!-- Optional but recommended -->
      <meta property="og:image:width" content="1200" />
      <meta property="og:image:height" content="630" />
      
    <link href="https://fonts.googleapis.com/css2?family=Anek+Kannada:wght@100..800&family=League+Spartan:wght@100..900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Serif+Kannada:wght@100..900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Charm:wght@400;700&display=swap" rel="stylesheet">
    <title>Akshaya ❤️ Anusha</title>

    <script>
      if(!sessionStorage.getItem("_swa")&&document.referrer.indexOf(location.protocol+"//"+location.host)!== 0){fetch("https://counter.dev/track?"+new URLSearchParams({referrer:document.referrer,screen:screen.width+"x"+screen.height,user:"your-username",utcoffset:"6"}))};sessionStorage.setItem("_swa","1");
    </script>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

================
File: netlify.toml
================
[build]
  command = "npm run build"
  publish = "dist"

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

================
File: package.json
================
{
  "name": "wedding-website",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-icons": "^5.3.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.15.0",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.20",
    "eslint": "^9.15.0",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.14",
    "globals": "^15.12.0",
    "postcss": "^8.4.49",
    "tailwindcss": "^3.4.15",
    "vite": "^6.0.1"
  }
}

================
File: postcss.config.js
================
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

================
File: README.md
================
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

================
File: src\App.css
================
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

================
File: src\App.jsx
================
import TitleComponent from './components/TitleComponent'
import DirectionsComponent from './components/DirectionsComponent'
import BackgroundPattern from './components/BackgroundPattern'

function App() {
  return (
    <div className="relative min-h-screen bg-gradient-to-b from-red-50 to-orange-50 overflow-x-hidden">
      <BackgroundPattern />
      <div className="relative z-10 max-w-7xl mx-auto">
        <TitleComponent />
        <DirectionsComponent />
      </div>
    </div>
  )
}

export default App;

================
File: src\components\AddToCalendar.jsx
================
import React, { useState } from 'react';

const AddToCalendar = () => {
  const [isOpen, setIsOpen] = useState(false);

  const event = {
    title: "ಅಕ್ಷಯ & ಅನುಷ Wedding",
    description: "Wedding Ceremony of ಅಕ್ಷಯ and ಅನುಷ",
    location: "ಧನಾಂಜನೇಯ ಸಭಾಭವನ, ಹೊಳೆಕೊಪ್ಪ, ಸೊರಬ ತಾ||, ಶಿವಮೊಗ್ಗ ಜಿ||",
    startDate: "2024-12-08T09:08:00",
    endDate: "2024-12-08T13:00:00",
  };

  const generateGoogleCalendarUrl = () => {
    const base = "https://calendar.google.com/calendar/render?action=TEMPLATE";
    const dates = `dates=${event.startDate.replace(/[-:]/g, '')}/${event.endDate.replace(/[-:]/g, '')}`;
    const details = `details=${encodeURIComponent(event.description)}`;
    const location = `location=${encodeURIComponent(event.location)}`;
    const text = `text=${encodeURIComponent(event.title)}`;
    
    return `${base}&${dates}&${details}&${location}&${text}`;
  };

  const generateIcsFile = () => {
    const icsContent = `BEGIN:VCALENDAR
VERSION:2.0
BEGIN:VEVENT
DTSTART:${event.startDate.replace(/[-:]/g, '')}
DTEND:${event.endDate.replace(/[-:]/g, '')}
SUMMARY:${event.title}
DESCRIPTION:${event.description}
LOCATION:${event.location}
END:VEVENT
END:VCALENDAR`;

    const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });
    const link = document.createElement('a');
    link.href = window.URL.createObjectURL(blob);
    link.setAttribute('download', 'wedding.ics');
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <div className="relative inline-block text-left">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
      >
        <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        Add to Calendar
      </button>

      {isOpen && (
        <div className="absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5">
          <div className="py-1" role="menu">
            <a
              href={generateGoogleCalendarUrl()}
              target="_blank"
              rel="noopener noreferrer"
              className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
              role="menuitem"
            >
              Google Calendar
            </a>
            <button
              onClick={generateIcsFile}
              className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
              role="menuitem"
            >
              Apple Calendar / Outlook
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default AddToCalendar;

================
File: src\components\BackgroundPattern.jsx
================
const BackgroundPattern = () => (
    <div className="absolute inset-0 z-0 pointer-events-none">
      <div 
        className="absolute inset-0 opacity-10" 
        style={{
          backgroundImage: `
            radial-gradient(circle at 25px 25px, #FF9999 2px, transparent 0),
            radial-gradient(circle at 75px 75px, #FF9999 2px, transparent 0)
          `,
          backgroundSize: '100px 100px'
        }}
      />
      <div 
        className="absolute inset-0 opacity-5"
        style={{
          backgroundImage: `
            linear-gradient(45deg, #FF6B6B 25%, transparent 25%),
            linear-gradient(-45deg, #FF6B6B 25%, transparent 25%)
          `,
          backgroundSize: '60px 60px',
          transform: 'rotate(45deg)'
        }}
      />
    </div>
  );
  
  export default BackgroundPattern;

================
File: src\components\DirectionsComponent.jsx
================
import { FaMapMarkerAlt } from 'react-icons/fa';

const DirectionsComponent = () => {
  return (
    <div className="text-center w-full max-w-6xl mx-auto px-4 py-2 mb-6">
      {/* Directions Button */}
      <div className="mt-8">
        <a
          href="https://maps.app.goo.gl/Wi8ytDTUp4Genppo8"
          target="_blank"
          rel="noopener noreferrer"
          className="block w-full md:w-auto px-6 py-3 text-white bg-red-600 hover:bg-red-700 rounded-lg shadow-lg text-lg font-semibold mx-auto"
        >
          <FaMapMarkerAlt className="mr-2 inline" />
          Get Directions
        </a>
      </div>

      {/* Embedded Google Map */}
      <div className="mt-8">
        <iframe
          src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d11102.25115005065!2d75.07922279944555!3d14.237201034879151!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bbbf3a24b643173%3A0x293d4dcef4b84503!2sDhananjaneya%20Swamy%20Temple!5e0!3m2!1sen!2sin!4v1732784492924!5m2!1sen!2sin"
          width="100%"
          height="300"
          allowFullScreen=""
          loading="lazy"
          className="rounded-lg shadow-lg"
          title="Google Map"
        ></iframe>
      </div>
    </div>
  );
};

export default DirectionsComponent;

================
File: src\components\TitleComponent.jsx
================
const TitleComponent = () => {
  return (
    <div className="relative pt-16 pb-8 px-4">
      <div className="relative bg-white/90 backdrop-blur-sm max-w-3xl p-8 mx-auto">
        <div className="text-center">
          <h3 className="text-blue-900 mb-2 font-kannada font-bold text-xl sm:text-2xl leading-tight">
            ಕಲ್ಯಾಣಕರ್‌ ಕುಟುಂಬದವರಿಂದ
          </h3>
          <span className="text-blue-900 text-2xl sm:text-3xl font-bold font-kannada leading-snug">
            ಮದುವೆಯ ಮಮತೆಯ ಕರೆಯೋಲೆ
          </span>

          <div className="h-px w-32 bg-red-300 mx-auto my-6" />
          
          <div className="flex items-center justify-center gap-2 sm:gap-4 mb-6">
            <h1 className="text-4xl sm:text-6xl font-bold text-red-800 font-kannada">ಅಕ್ಷಯ</h1>
            <div className="flex items-center justify-center" style={{ transform: "rotate(20deg)" }}>
              <span className="text-xl sm:text-3xl font-bold text-pink-700 font-kannada stroke-orange-700 stroke-2">ಜೊತೆ</span>
            </div>
            <h1 className="text-4xl sm:text-6xl font-bold text-red-800 font-kannada">ಅನುಷ</h1>
          </div>

          <div className="h-px w-32 bg-red-300 mx-auto mb-6" />

          <div className="space-y-6 px-4">
            <div className="relative">
              <p className="text-xl sm:text-2xl text-red-700 font-semibold underline font-kannato">
                ನಿಶ್ಚಿತಾರ್ಥ:
              </p>
              <p className="text-lg sm:text-xl text-red-800 font-kannato">
                7 ಡಿಸೆಂಬರ್, 2024 - ರಾತ್ರಿ 8:00
              </p>
            </div>

            <div className="relative">
              <p className="text-xl sm:text-2xl text-red-700 underline font-semibold font-kannato">
                ವಿವಾಹ ಮುಹೂರ್ತ:
              </p>
              <p className="text-lg sm:text-xl text-red-800 font-kannato">
                8 ಡಿಸೆಂಬರ್, 2024 - ಬೆಳಗ್ಗೆ 09:08
              </p>
            </div>

            <div className="relative">
              <p className="text-xl sm:text-2xl text-red-700 underline font-semibold font-kannato">
                ವಿವಾಹ ಸ್ಥಳ:
              </p>
              <p className="text-lg sm:text-xl text-red-800 font-kannato">
                ಧನಾಂಜನೇಯ ಸಭಾಭವನ, <br/> 
                ಹೊಳೆಕೊಪ್ಪ , ಸೊರಬ (ತಾ), ಶಿವಮೊಗ್ಗ (ಜಿ)
              </p>
            </div>
            <div className="relative">
              <p className="text-2xl sm:text-3xl text-red-700 underline font-semibold font-style mb-2">
              Reception
              </p>
              <p className="text-lg sm:text-xl text-red-800 font-kannato">
              9 ಡಿಸೆಂಬರ್, 2024 <br/>
              ಆರತಕ್ಷತೆ ಸ್ಥಳ : ವರನ ಸ್ವಗೃಹ, <br/>
              ಕಮಲಾಪುರ, ವಿಜಯನಗರ (ಜಿ)  <br/>
         
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default TitleComponent

================
File: src\components\VenueComponent.jsx
================
const VenueComponent = () => {
    return (
      <div className="w-full min-h-screen flex items-center justify-center bg-white py-20">
        <div className="w-full max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-4xl text-red-800 mb-4">The Venue</h2>
            <div className="h-px w-24 bg-red-300 mx-auto"></div>
          </div>
  
          <div className="grid md:grid-cols-2 gap-8">
            <div className="bg-red-50 p-8 rounded-lg shadow-lg">
              <h3 className="text-2xl text-red-700 mb-4">Wedding Ceremony</h3>
              <p className="text-lg text-red-600 mb-2">Taj Palace Gardens</p>
              <p className="text-red-600">11:00 AM onwards</p>
              <div className="mt-4 text-red-600">
                <p>Traditional Ceremony</p>
                <p>Followed by Lunch</p>
              </div>
            </div>
  
            <div className="bg-red-50 p-8 rounded-lg shadow-lg">
              <h3 className="text-2xl text-red-700 mb-4">Reception</h3>
              <p className="text-lg text-red-600 mb-2">Grand Ballroom</p>
              <p className="text-red-600">7:00 PM onwards</p>
              <div className="mt-4 text-red-600">
                <p>Dinner & Dancing</p>
                <p>Celebration</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    )
  }
  
  export default VenueComponent

================
File: src\index.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  padding: 0;
  width: 100%;
  min-height: 100vh;
}

#root {
  width: 100%;
  min-height: 100vh;
}

================
File: src\main.jsx
================
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)

================
File: tailwind.config.js
================
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      fontFamily: {
        kannada: ['Anek Kannada', 'sans-serif'],
        english: ['Cormorant Garamond', 'serif'],
        kannato: ['Noto Serif Kannada', 'serif'],
        style: ['Charm', 'cursive'],
      }
    },
  },
  plugins: [],
}

================
File: vite.config.js
================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})
